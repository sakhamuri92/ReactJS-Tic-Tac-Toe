{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","components/helper.js","components/BasicTicTacToe.js","App.js","reportWebVitals.js","index.js"],"names":["Square","value","onClick","className","Board","squares","map","square","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","historyPoint","slice","current","_step","move","destination","step","BasicTicTacToe","board","setBoard","playerTurn","setPlayerTurn","setWinner","squareClicked","index","player_turn","player_board","forEach","wining_row","p1","p2","p3","alert","console","log","App","toggleApp","setToggleApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.28cfb2f7.chunk.js","sourcesContent":["import React from 'react';\r\nconst Square = ({ value, onClick }) => {\r\n    const style = value ? `squares ${value}` : `squares`\r\n    return (\r\n        <button className=\"style\" onClick={onClick}>{value}</button>\r\n    )\r\n}\r\n\r\nexport default Square","import React from 'react'\r\nimport Square from './Square'\r\n\r\nconst Board = ({squares,onClick}) =>((\r\n    <div className=\"board\">\r\n    { squares.map((square,i) =>\r\n    (<Square key = {i} value={square} onClick = {() => onClick(i)}/>)\r\n    )}    </div>\r\n   \r\n)\r\n)\r\nexport default Board"," import React,{Fragment, useState} from 'react'\r\nimport Board from './Board';\r\nimport {calculateWinner} from './helper'\r\nconst Game = () => {\r\n    const [history, setHistory] = useState([Array(9).fill(null)]);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    const winner = calculateWinner(history[stepNumber]);\r\n    const xO = xIsNext ? \"X\" : \"O\";\r\n  \r\n    const handleClick = (i) => {\r\n      const historyPoint = history.slice(0, stepNumber + 1);\r\n      const current = historyPoint[stepNumber];\r\n      const squares = [...current];\r\n      // return if won or occupied\r\n      if (winner || squares[i]) return;\r\n      // select square\r\n      squares[i] = xO;\r\n      setHistory([...historyPoint, squares]);\r\n      setStepNumber(historyPoint.length);\r\n      setXisNext(!xIsNext);\r\n    };\r\n  \r\n    const jumpTo = (step) => {\r\n      setStepNumber(step);\r\n      setXisNext(step % 2 === 0);\r\n    };\r\n  \r\n    const renderMoves = () =>\r\n      history.map((_step, move) => {\r\n        const destination = move ? `Go to move #${move}` : \"Go to Start\";\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => jumpTo(move)}>{destination}</button>\r\n          </li>\r\n        );\r\n      });\r\n  \r\n    return (\r\n      <div>\r\n        <h1>React Tic Tac Toe - With Hooks</h1>\r\n        <Board squares={history[stepNumber]} onClick={handleClick} />\r\n        <div className=\"info-wrapper\">\r\n          <div>\r\n            <h3>History</h3>\r\n            {renderMoves()}\r\n          </div>\r\n          <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Game;","export const calculateWinner = (squares) => {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}","import '../App.css'\r\nimport React,{ useState} from 'react'\r\n\r\nfunction BasicTicTacToe() {\r\n  const [board,setBoard] = useState(['','','','','','','','','','']);\r\n  const [playerTurn,setPlayerTurn]  = useState('X');\r\n  const [winner,setWinner] = useState('')\r\n  const squareClicked = (index) =>{\r\n    if(board[index]) return;\r\n    if(winner) return;\r\n    let player_turn = playerTurn;\r\n    let player_board = [...board];\r\n    player_board[index] = player_turn;\r\n\r\n    let winning_combinations = [\r\n      [0,1,2],\r\n      [3,4,5],\r\n      [6,7,8],\r\n      [0,3,6],\r\n      [1,4,7],\r\n      [2,5,8],\r\n      [0,4,8],\r\n      [2,4,6]\r\n    ]\r\n    \r\n    winning_combinations.forEach((wining_row) => {\r\n      let p1 = wining_row[0];\r\n      let p2 = wining_row[1];\r\n      let p3 = wining_row[2];\r\n        if(player_board[p1] && player_board[p1] === player_board[p2] && player_board[p2] === player_board[p3] && player_board[p3] === player_board[p1]) {\r\n          alert(`Winner: Player  is ${playerTurn}`)\r\n          setWinner(true);\r\n        }\r\n    })\r\n    if(player_turn === 'X') {\r\n      player_turn = 'O'\r\n    } else {\r\n      player_turn = 'X'\r\n    }\r\n    setPlayerTurn(player_turn)\r\n    setBoard(player_board);\r\n    console.log(index,player_turn)\r\n  }\r\n  return (\r\n      <div className=\"SimpleTicTacToe\">\r\n      <div className=\"inner-container\">\r\n        <h1>Tic Tac Toe</h1>\r\n        <table>\r\n          <tr>\r\n            <td onClick={()=>squareClicked(0)}>{board[0]}</td>\r\n            <td onClick={()=>squareClicked(1)}>{board[1]}</td>\r\n            <td onClick={()=>squareClicked(2)}>{board[2]}</td>\r\n          </tr>\r\n          <tr>\r\n            <td onClick={()=>squareClicked(3)}>{board[3]}</td>\r\n            <td onClick={()=>squareClicked(4)}>{board[4]}</td>\r\n            <td onClick={()=>squareClicked(5)}>{board[5]}</td>\r\n          </tr>\r\n          <tr>\r\n            <td onClick={()=>squareClicked(6)}>{board[6]}</td>\r\n            <td onClick={()=>squareClicked(7)}>{board[7]}</td>\r\n            <td onClick={()=>squareClicked(8)}>{board[8]}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n      <button onClick = {() => { setPlayerTurn('X');setBoard(['','','','','','','','','',''])}}>ResetBoard</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BasicTicTacToe;\r\n","import './App.css'\nimport React,{ useState} from 'react'\nimport Game from './components/Game';\nimport './index.css'\nimport BasicTicTacToe from './components/BasicTicTacToe';\n\nfunction App() {\n  const [toggleApp,setToggleApp] = useState(true);\n  return (\n    <div className=\"App\">\n    <button onClick={() => setToggleApp(!toggleApp)}>{ toggleApp ? 'Simple Game': 'Game with steps'}</button>\n    <div>\n    { toggleApp ? <Game /> : <BasicTicTacToe />}\n    </div>\n   \n    {/* <BasicTicTacToe /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}